@use "sass:list";
@use "../../../datev-theme/variables/form";
@use "../../../datev-theme/variables/general";
@use "../../../datev-theme/variables/misc";
@use "../../mixins";

@use "sass:math";

// core
.p-treeselect {
    display: inline-flex;
    cursor: pointer;
    user-select: none;
}

.p-treeselect-trigger {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
}

.p-treeselect-label-container {
    overflow: hidden;
    flex: 1 1 auto;
    cursor: pointer;
}

.p-treeselect-label {
    display: block;
    white-space: nowrap;
    cursor: pointer;
    overflow: hidden;
    text-overflow: ellipsis;
}

.p-treeselect-label-empty {
    overflow: hidden;
    visibility: hidden;
}

.p-treeselect-token {
    cursor: default;
    display: inline-flex;
    align-items: center;
    flex: 0 0 auto;
}

.p-treeselect .p-treeselect-panel {
    min-width: 100%;
}

.p-treeselect-items-wrapper {
    overflow: auto;
}

.p-fluid .p-treeselect {
    display: flex;
}

// theme
.p-treeselect {
    background: form.$inputBg;
    border: form.$inputBorder;
    transition: general.$formElementTransition;
    border-radius: general.$borderRadius;
    outline-color: transparent;

    &:not(.p-disabled):hover {
        border-color: form.$inputHoverBorderColor;
    }

    &:not(.p-disabled).p-focus {
        @include mixins.focused-input();
    }

    &.p-variant-filled {
        background: form.$inputFilledBg;

        &:not(.p-disabled):hover {
            background-color: form.$inputFilledHoverBg;
        }

        &:not(.p-disabled).p-focus {
            background-color: form.$inputFilledFocusBg;
        }
    }

    .p-treeselect-label {
        padding: form.$inputPadding;
        transition: general.$formElementTransition;

        &.p-placeholder {
            color: form.$inputPlaceholderTextColor;
        }
    }

    &.p-treeselect-chip {
        .p-treeselect-token {
            padding: math.div(list.nth(form.$inputPadding, 1), 2) list.nth(form.$inputPadding, 2);
            margin-right: general.$inlineSpacing;
            background: misc.$chipBg;
            color: misc.$chipTextColor;
            border-radius: misc.$chipBorderRadius;
        }
    }

    .p-treeselect-trigger {
        background: transparent;
        color: form.$inputIconColor;
        width: form.$inputGroupAddOnMinWidth;
        border-top-right-radius: general.$borderRadius;
        border-bottom-right-radius: general.$borderRadius;
    }

    &.p-invalid.p-component {
        @include mixins.invalid-input();
    }
}

.p-inputwrapper-filled {
    &.p-treeselect {
        &.p-treeselect-chip {
            .p-treeselect-label {
                padding: math.div(list.nth(form.$inputPadding, 1), 2)
                    list.nth(form.$inputPadding, 2);
            }
        }
    }
}

.p-treeselect-panel {
    background: form.$inputOverlayBg;
    color: form.$inputListTextColor;
    border: form.$inputOverlayBorder;
    border-radius: general.$borderRadius;
    box-shadow: form.$inputOverlayShadow;

    .p-treeselect-items-wrapper {
        .p-tree {
            border: 0 none;
        }

        .p-treeselect-empty-message {
            padding: form.$inputListItemPadding;
            color: form.$inputListItemTextColor;
            background: form.$inputListItemBg;
        }
    }
}

.p-input-filled {
    .p-treeselect {
        background: form.$inputFilledBg;

        &:not(.p-disabled):hover {
            background-color: form.$inputFilledHoverBg;
        }

        &:not(.p-disabled).p-focus {
            background-color: form.$inputFilledFocusBg;
        }
    }
}
